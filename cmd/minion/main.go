package main

import (
	"fmt"
	"log"
	"os"

	"minion/internal/commands"
	"minion/internal/config"

	"github.com/spf13/cobra"
)

var rootCmd = &cobra.Command{
	Use:     "minion",
	Short:   "üçå Minion - iiko Automation Tool",
	Long:    "üçå BELLO! Minion - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è iiko API",
	Version: "1.0.0",
}

func init() {
	rootCmd.AddCommand(commands.ExtendKeysCmd)
	rootCmd.AddCommand(commands.RefreshMenusCmd)
}

func main() {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
	if _, err := os.Stat("config.json"); os.IsNotExist(err) {
		fmt.Println("‚ö†Ô∏è  –§–∞–π–ª config.json –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑—Ü–∞...")
		if err := config.CreateSampleConfig(); err != nil {
			log.Fatal("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞–∑—Ü–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:", err)
		}
		fmt.Println("‚úÖ –û–±—Ä–∞–∑–µ—Ü config.json —Å–æ–∑–¥–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤.")
		return
	}

	if err := rootCmd.Execute(); err != nil {
		fmt.Println(err)
		os.Exit(1)
	}
}
